# blueprint for api application of configuration
FROM golang:alpine AS build-env

LABEL maintainer="Alan Tai <alan.tai@riverbed.com>"

### Stage 1.
ADD web_apis_config.go /app/web_apis_config.go
ADD apis /go/src/apis
ADD dbs /go/src/dbs

# Update apk repositories
RUN echo "http://dl-3.alpinelinux.org/alpine/v3.8/main" > /etc/apk/repositories && \
  echo "http://dl-3.alpinelinux.org/alpine/v3.8/community" >> /etc/apk/repositories

# Install dependencies
RUN apk add --no-cache --update git \
  && go get -u github.com/gorilla/websocket \
    github.com/go-redis/redis \
  && apk del git \
  && go build -o /app/web /app/web_apis_config.go

# remove unnecessary stuff
RUN rm -rf /var/lib/apt/lists/* \
  /var/cache/apk/* \
  /usr/share/man \
  /tmp/*


### Stage 2.
FROM alpine
WORKDIR /app
COPY --from=build-env /app/web /app/

# Install dependencies
RUN apk add --no-cache dumb-init

# remove unnecessary stuff
RUN rm -rf /var/lib/apt/lists/* \
  /var/cache/apk/* \
  /usr/share/man \
  /tmp/*

ENV PORT 3001
EXPOSE 3001
ENTRYPOINT ["dumb-init", "./web"]